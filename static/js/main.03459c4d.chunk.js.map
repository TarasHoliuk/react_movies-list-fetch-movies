{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","api/api.ts","components/FindMovie/FindMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","props","movie","title","description","imgUrl","imdbUrl","Poster","className","src","alt","href","MoviesList","movies","map","imdbId","movieLoader","a","fetch","json","FindMovie","addMovie","useState","setTitle","previewMovie","setPreviewMovie","error","setError","findMovie","event","preventDefault","foundedMovie","Response","Title","Plot","imdbID","onSubmit","htmlFor","type","id","value","placeholder","onChange","target","onClick","disabled","App","data","setMovies","ReactDOM","render","document","getElementById"],"mappings":"+TAOaA,EAA6B,SAACC,GACzC,MAMIA,EAAMC,MALRC,EADF,EACEA,MACAC,EAFF,EAEEA,YACAC,EAHF,EAGEA,OACAC,EAJF,EAIEA,QACAC,EALF,EAKEA,OAGF,OACE,sBAAKC,UAAU,OAAf,UACE,qBAAKA,UAAU,aAAf,SACE,wBAAQA,UAAU,gBAAlB,SACE,qBACEC,IAAKJ,EACLK,IAAI,kBAIV,sBAAKF,UAAU,eAAf,UACE,sBAAKA,UAAU,QAAf,UACE,qBAAKA,UAAU,aAAf,SACE,wBAAQA,UAAU,iBAAlB,SACE,qBACEC,IAAI,wBACJC,IAAI,aAIV,qBAAKF,UAAU,gBAAf,SACE,mBAAGA,UAAU,aAAb,SAA2BL,SAI/B,sBAAKK,UAAU,UAAf,UACGJ,EACD,uBACA,mBAAGO,KAAML,GAAWC,EAApB,4BCpCGK,EAA8B,SAAC,GAAD,QACzCC,cADyC,MAChC,GADgC,SAGzC,qBAAKL,UAAU,SAAf,SACGK,EAAOC,KAAI,SAAAZ,GAAK,OACf,cAAC,EAAD,CAA8BA,MAAOA,GAArBA,EAAMa,c,uBCXfC,G,MAAW,uCAAG,WAAOb,GAAP,eAAAc,EAAA,sEACLC,MAAM,GAAD,OAHf,+CAGe,OAAUf,IADV,cACnBD,EADmB,yBAGlBA,EAAMiB,QAHY,2CAAH,uDCQXC,EAA6B,SAACnB,GACzC,IAAQoB,EAAapB,EAAboB,SAER,EAA0BC,mBAAS,IAAnC,mBAAOnB,EAAP,KAAcoB,EAAd,KACA,EAAwCD,mBAAuB,MAA/D,mBAAOE,EAAP,KAAqBC,EAArB,KACA,EAA0BH,oBAAS,GAAnC,mBAAOI,EAAP,KAAcC,EAAd,KAEMC,EAAS,uCAAG,WAAOC,GAAP,iBAAAZ,EAAA,6DAChBY,EAAMC,iBADU,SAGyBd,EAAYb,GAHrC,OAKc,WAFxB4B,EAHU,QAKCC,WACfL,GAAS,GACTF,EAAgB,OAGlBE,GAAS,GAEHzB,EAAe,CACnBC,MAAO4B,EAAaE,MACpB7B,YAAa2B,EAAaG,KAC1B7B,OAAQ0B,EAAaxB,OACrBQ,OAAQgB,EAAaI,OACrB7B,QAAQ,8BAAD,OAAgCyB,EAAaI,SAGtDV,EAAgBvB,GApBA,2CAAH,sDAuBf,OACE,qCACE,uBACEM,UAAU,aACV4B,SAAU,SAACP,GAAD,OAAWD,EAAUC,IAFjC,UAIE,sBAAKrB,UAAU,QAAf,UACE,uBAAOA,UAAU,QAAQ6B,QAAQ,cAAjC,yBAIA,qBAAK7B,UAAU,UAAf,SACE,uBACE8B,KAAK,OACLC,GAAG,cACHC,MAAOrC,EACPsC,YAAY,0BACZjC,UAAU,kBACVkC,SAAU,SAACb,GAAD,OAAWN,EAASM,EAAMc,OAAOH,eAKhDd,GACC,mBAAGlB,UAAU,iBAAb,kDAKF,sBAAKA,UAAU,mBAAf,UACE,qBAAKA,UAAU,UAAf,SACE,wBACE8B,KAAK,SACL9B,UAAU,kBACVoC,QAAS,SAACf,GAAD,OAAWD,EAAUC,IAHhC,4BASF,qBAAKrB,UAAU,UAAf,SACE,wBACE8B,KAAK,SACL9B,UAAU,oBACVqC,UAAWrB,EACXoB,QAAS,kBAAMvB,EAASG,IAJ1B,qCAYN,sBAAKhB,UAAU,YAAf,UACE,oBAAIA,UAAU,QAAd,qBACCgB,GAAgB,cAAC,EAAD,CAAWtB,MAAOsB,W,OCzF9BsB,EAAgB,WAC3B,MAA4BxB,mBAASyB,GAArC,mBAAOlC,EAAP,KAAemC,EAAf,KAMA,OACE,sBAAKxC,UAAU,OAAf,UACE,qBAAKA,UAAU,eAAf,SACE,cAAC,EAAD,CAAYK,OAAQA,MAEtB,qBAAKL,UAAU,UAAf,SACE,cAAC,EAAD,CAAWa,SAVA,SAACnB,GAChB8C,EAAU,GAAD,mBAAKnC,GAAL,CAAaX,cCN1B+C,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,U","file":"static/js/main.03459c4d.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie;\n};\n\nexport const MovieCard: React.FC<Props> = (props) => {\n  const {\n    title,\n    description,\n    imgUrl,\n    imdbUrl,\n    Poster,\n  } = props.movie;\n\n  return (\n    <div className=\"card\">\n      <div className=\"card-image\">\n        <figure className=\"image is-4by3\">\n          <img\n            src={imgUrl}\n            alt=\"Film logo\"\n          />\n        </figure>\n      </div>\n      <div className=\"card-content\">\n        <div className=\"media\">\n          <div className=\"media-left\">\n            <figure className=\"image is-48x48\">\n              <img\n                src=\"images/imdb-logo.jpeg\"\n                alt=\"imdb\"\n              />\n            </figure>\n          </div>\n          <div className=\"media-content\">\n            <p className=\"title is-8\">{title}</p>\n          </div>\n        </div>\n\n        <div className=\"content\">\n          {description}\n          <br />\n          <a href={imdbUrl || Poster}>IMDB</a>\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\ninterface Props {\n  movies: Movie[];\n}\n\nexport const MoviesList: React.FC<Props> = ({\n  movies = [],\n}) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} movie={movie} />\n    ))}\n  </div>\n);\n","const url = 'https://www.omdbapi.com/?apikey=9f031ba6&t=';\n\nexport const movieLoader = async (title: string) => {\n  const movie = await fetch(`${url}${title}`);\n\n  return movie.json();\n};\n","import React, { useState } from 'react';\nimport './FindMovie.scss';\n\nimport { MovieCard } from '../MovieCard';\nimport { movieLoader } from '../../api/api';\n\ninterface Props {\n  addMovie: (movie: Movie) => void;\n}\n\nexport const FindMovie: React.FC<Props> = (props) => {\n  const { addMovie } = props;\n\n  const [title, setTitle] = useState('');\n  const [previewMovie, setPreviewMovie] = useState<Movie | null>(null);\n  const [error, setError] = useState(false);\n\n  const findMovie = async (event: React.FormEvent) => {\n    event.preventDefault();\n\n    const foundedMovie: FoundedMovie = await movieLoader(title);\n\n    if (foundedMovie.Response === 'False') {\n      setError(true);\n      setPreviewMovie(null);\n    }\n\n    setError(false);\n\n    const movie: Movie = {\n      title: foundedMovie.Title,\n      description: foundedMovie.Plot,\n      imgUrl: foundedMovie.Poster,\n      imdbId: foundedMovie.imdbID,\n      imdbUrl: `https://www.imdb.com/title/${foundedMovie.imdbID}`,\n    };\n\n    setPreviewMovie(movie);\n  };\n\n  return (\n    <>\n      <form\n        className=\"find-movie\"\n        onSubmit={(event) => findMovie(event)}\n      >\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              type=\"text\"\n              id=\"movie-title\"\n              value={title}\n              placeholder=\"Enter a title to search\"\n              className=\"input is-danger\"\n              onChange={(event) => setTitle(event.target.value)}\n            />\n          </div>\n        </div>\n\n        {error && (\n          <p className=\"help is-danger\">\n            Can&apos;t find a movie with such a title\n          </p>\n        )}\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              type=\"submit\"\n              className=\"button is-light\"\n              onClick={(event) => findMovie(event)}\n            >\n              Find a movie\n            </button>\n          </div>\n\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-primary\"\n              disabled={!previewMovie}\n              onClick={() => addMovie(previewMovie as Movie)}\n            >\n              Add to the list\n            </button>\n          </div>\n        </div>\n      </form>\n\n      <div className=\"container\">\n        <h2 className=\"title\">Preview</h2>\n        {previewMovie && <MovieCard movie={previewMovie as Movie} />}\n      </div>\n    </>\n  );\n};\n","import { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\nimport data from './api/movies.json';\n\nexport const App: React.FC = () => {\n  const [movies, setMovies] = useState(data);\n\n  const addMovie = (movie: Movie) => {\n    setMovies([...movies, movie]);\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n      <div className=\"sidebar\">\n        <FindMovie addMovie={addMovie} />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}